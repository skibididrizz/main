{
  "name": "@skibididrizz/drizzle",
  "version": "0.1.13",
  "type": "module",
  "main": "dist/src/index.js",
  "tspMain": "lib/main.tsp",
  "npmPublishAccess": "public",
  "exports": {
    ".": {
      "types": "./dist/src/index.d.ts",
      "default": "./dist/src/index.js"
    },
    "./testing": {
      "types": "./dist/src/testing/index.d.ts",
      "default": "./dist/src/testing/index.js"
    },
    "./examples": {
      "types": "./dist/test/examples.test.snapshot.d.ts",
      "default": "./dist/test/examples.test.snapshot.js"
    }
  },
  "peerDependencies": {
    "@typespec/compiler": "*"
  },
  "devDependencies": {
    "@skibididrizz/drizzle": "^workspace:",
    "@types/node": "^20.14.9",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "@typespec/compiler": "0.57.0",
    "@typespec/library-linter": "^0.57.0",
    "drizzle-orm": "^0.31.2",
    "eslint": "^8.45.0",
    "prettier": "^3.0.3",
    "rimraf": "^5.0.7",
    "tsx": "^4.15.6",
    "typedoc": "^0.26.3",
    "typedoc-plugin-markdown": "^4.1.1",
    "typescript": "^5.5.2"
  },
  "scripts": {
    "envo": "env",
    "clean": "rimraf dist",
    "build": "tsc && $npm_execpath run build:tsp && $npm_execpath run format",
    "watch": "tsc --watch",
    "build:tsp": "tsp compile . --warn-as-error --import @typespec/library-linter --no-emit",
    "test:watch": "tsx --experimental-test-snapshots --test-update-snapshots --watch --test ./test/**/*.test.ts --test-only",
    "test": "tsx  --experimental-test-snapshots --test ./test/**/*.test.ts",
    "test:snapshot": "tsx --experimental-test-snapshots --test-update-snapshots --test ./test/**/*.test.ts",
    "lint": "eslint src/ test/ --report-unused-disable-directives --max-warnings=0",
    "lint:fix": "eslint . --report-unused-disable-directives --fix",
    "format": "prettier .  --write",
    "format:check": "prettier --check .",
    "docs": "tsx ./bin/mkdoc.ts > ../site/docs/examples.md; typedoc --plugin typedoc-plugin-markdown --readme none --out ../site/docs/tsdocs ./src/decorators.ts"
  }
}
